name: heatmap_using_classification
sources:
  input_samples:
    - download_samples.user_input
  input_raster:
    - soil_sample_heatmap_classification.input_raster
sinks:
  result: soil_sample_heatmap_classification.result
parameters:
  attribute_name:
  buffer:
  index:
  bins:
  simplify:
  tolerance:
  data_scale:
  max_depth:
  n_estimators:
  random_state:
tasks:
  download_samples:
    workflow: data_ingestion/user_data/ingest_geometry
  soil_sample_heatmap_classification:
    workflow: data_processing/heatmap/classification
    parameters:
      attribute_name: "@from(attribute_name)"
      buffer: "@from(buffer)"
      index: "@from(index)"
      bins: "@from(bins)"
      simplify: "@from(simplify)"
      tolerance: "@from(tolerance)"
      data_scale: "@from(data_scale)"
      max_depth: "@from(max_depth)"
      n_estimators: "@from(n_estimators)"
      random_state: "@from(random_state)"
edges:
  - origin: download_samples.geometry
    destination:
      - soil_sample_heatmap_classification.samples
description:
  short_description: The workflow generates a nutrient heatmap for samples provided by user by downloading the samples from user input.
  long_description: The samples provided are related with farm boundary and have required nutrient information to create a heatmap.
  sources:
    input_raster: Input raster for index computation.
    input_samples: External references to sensor samples for nutrients.
  sinks:
    result: Zip file containing cluster geometries.
  parameters: # Utilize parameters configured in workflow data_processing/heatmap/classification.yaml

