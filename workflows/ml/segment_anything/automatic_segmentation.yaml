name: automatic_segmentation
sources:
  input_raster:
    - clip.raster
  input_geometry:
    - clip.input_geometry
sinks:
  segmentation_mask: combine_masks.output_mask
parameters:
  model_type: vit_b
  band_names: null
  band_scaling: null
  band_offset: null
  spatial_overlap: 0.5
  points_per_side: 16
  n_crop_layers: 0
  crop_overlap_ratio: 0.0
  crop_n_points_downscale_factor: 1
  pred_iou_thresh: 0.88
  stability_score_thresh: 0.95
  stability_score_offset: 1.0
  points_per_batch: 16
  num_workers: 0
  in_memory: True
  chip_nms_thr: 0.7
  mask_nms_thr: 0.5
tasks:
  clip:
    workflow: data_processing/clip/clip
  sam_inference:
    op: automatic_segmentation
    op_dir: segment_anything
    parameters:
      model_type: "@from(model_type)"
      band_names: "@from(band_names)"
      band_scaling: "@from(band_scaling)"
      band_offset: "@from(band_offset)"
      spatial_overlap: "@from(spatial_overlap)"
      points_per_side: "@from(points_per_side)"
      n_crop_layers: "@from(n_crop_layers)"
      crop_overlap_ratio: "@from(crop_overlap_ratio)"
      crop_n_points_downscale_factor: "@from(crop_n_points_downscale_factor)"
      pred_iou_thresh: "@from(pred_iou_thresh)"
      stability_score_thresh: "@from(stability_score_thresh)"
      stability_score_offset: "@from(stability_score_offset)"
      points_per_batch: "@from(points_per_batch)"
      num_workers: "@from(num_workers)"
      in_memory: "@from(in_memory)"
  combine_masks:
    op: combine_sam_masks
    op_dir: segment_anything_combine_masks
    parameters:
      chip_nms_thr: "@from(chip_nms_thr)"
      mask_nms_thr: "@from(mask_nms_thr)"
edges:
  - origin: clip.clipped_raster
    destination:
      - sam_inference.input_raster
  - origin: sam_inference.segmented_chips
    destination:
      - combine_masks.input_masks
description:
  short_description: >-
    Runs a Segment Anything Model (SAM) automatic segmentation over input rasters.
  long_description: >-
    The workflow splits the input rasters into chips of 1024x1024 pixels with an overlap
    defined by `spatial_overlap`. Each chip is processed by SAM's image encoder, and a point grid
    is defined within each chip, with each point being used as a prompt for the segmentation. 
    Each point is used to generate a mask, and the masks are combined using multiple non-maximal
    suppression steps to generate the final segmentation mask. Before running the workflow, make
    sure the model has been imported into the cluster by running
    `scripts/export_prompt_segmentation_models.py`. The script will download the desired model
    weights from SAM repository, export the image encoder and mask decoder to ONNX format, and add
    them to the cluster. For more information, refer to the
    [FarmVibes.AI
    troubleshooting](https://microsoft.github.io/farmvibes-ai/docfiles/markdown/TROUBLESHOOTING.html)
    page in the documentation.
  sources:
    input_raster: Rasters used as input for the segmentation.
    input_geometry: Geometry of interest within the raster for the segmentation.
  sinks:
    segmentation_mask: Output segmentation masks.
